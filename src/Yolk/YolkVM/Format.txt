Ovo {
    VERSION: DOUBLE
    CODE {
        Instruction : uint_8
        Arguments [2] {
            Type: uint_8
            Value: uint_64
        }
    }[]
    TEXT {
        {
            Size : uint_64
            Content: Byte[Size]
        }
    }[]
}

Elementary Types:
    - INT  :  64 bits
    - UINT :  64 bits
    - DOUBLE :  64 bits
    - CHAR   :  64 bits
    - VOID   :  0 bits

Typedefs:
Arguments:Type:{ REGISTER, NAME, INT, UINT, DOUBLE, CHAR, STRING, VOID, TYPE}
ElementaryType:{ INT, UINT, DOUBLE, CHAR, STRING, VOID}

Argument values:
    IF Argument:Type is REGISTER:
        Argument:Value = {REGA: 0,    REGB: 1,    REGC: 2,    REGD: 3,    REGOUT: 4}
    IF Argument:Type is NAME:
        Argument:Value = UINT : POSITION IN TEXT OF STRING CONTAINING NAME
    IF Argument:Type is (INT : UINT : DOUBLE : CHAR):
        Argument:Value = (INT : UINT : DOUBLE : CHAR): Value
    IF Argument:Type is STRING:
        Argument:Value = UINT : POSITION IN TEXT OF STRING CONTAINING Value
    IF Argument:Type is VOID:
        Argument:Value = VOID : NONE
    IF Argument:Type is TYPE:
        Argument:Value = {INT: 0,    UINT: 1,    DOUBLE: 2,    CHAR: 3,    STRING: 4,    VOID: 5}

Instruction Set:

1.	MOV:        REGX, REGY  |   REGX, ELEMENTARY  |   REGX, NAME
2.	COPY:       REGX, REGY  |   REGX, ELEMENTARY  |   REGX, NAME
3.	CLONE:      REGX, REGY  |   REGX, NAME
4.	NEW:        REGX, ELEMENTARY
5.	MOVM:       REGX
6.	CALLM: 
7.	PUSHAR:     REGX  
8.	POPAR:   
9.	CLRAR:   
10.	PUSH:       REGX    
11.	POP:     
12.	CLEAR:   
13.	CMP:        REGX    
14.	CMPEQ:      REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME   
15.	CMPNEQ:     REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
16.	CMPLS:      REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME   
17.	CMPGT:      REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
18.	CMPLSEQ:    REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME 
19.	CMPGTEQ:    REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
20.	JNTRUE:     REGX        |   UINT
21.	JNFALSE:    REGX        |   UINT
22.	JMP:        REGX        |   UINT
23.	CALL:       REGX        |   UINT
24.	RET:
25.	ADD:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
26.	SUB:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
27.	MUL:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
28.	DIV:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
29.	MOD:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
30.	AND:        REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
31.	OR:         REGX, REGY  |   REGX, ELEMENTARY    |   REGX, NAME
32.	CAST:       REGX, REGY  |   REGX, TYPE          |   REGX, NAME
33.	NAME:       REGX, STRING 
34.	NAMEG:      REGX, STRING
35.	BRUP:
36.	BRDW:    
37.	BRHZ:       STRING    
38.	RSBR:
39.	ZERO:    
40.	HALT:    
